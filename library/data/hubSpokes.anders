import library/data/path

-- [Lumsdaine] 2012 Hubs and Spokes Disc

def is-null (S A : U) :=
is-path-split-equiv A (S → A) (const A S)

axiom hs (S A : U) : U
axiom center (S A : U) (x : A) : hs S A
axiom hub (S A : U) (f : S → hs S A) : hs S A
axiom spoke (S A : U) (f : S → hs S A) (s : S) : Path (hs S A) (hub S A f) (f s)
axiom hub-contr (S A : U) (x y : hs S A) (p : S → Path (hs S A) x y) : Path (hs S A) x y
axiom spoke-contr (S A : U) (x y : hs S A) (p : S → Path (hs S A) x y) (s : S) :
  Path (Path (hs S A) x y) (hub-contr S A x y p) (p s)

axiom hs-ind (S A : U) (B : hs S A → U) (nB : Π (x : hs S A), is-null S (B x))
  (nC : Π (a : A), B (center S A a)) (x : hs S A) : B x
