{- Deductive Systems.
   - Hilbert style deductive systems for propositional logic.

   https://en.wikipedia.org/wiki/List_of_Hilbert_systems

   Copyright (c) Groupoid Infinity, 2014-2022. -}

module hilbert where
import library/foundations/univalent/path
import library/foundations/mltt/proto

-- [Schönfinkel]

def S := Π (p q r: Ω) (x: p.1 → q.1 → r.1) (y: p.1 → q.1), p.1 → r.1
def K := Π (p q: Ω) (x: p.1), q.1 → p.1
def I := Π (p : Ω), p.1 → p.1

-- [Łukashewicz]

def L3-1 := Π (p q: Ω) (x: p.1), q.1 → p.1
def L3-2 := Π (p q r: Ω) (x: p.1 → q.1 → r.1) (y: p.1 → q.1), p.1 → r.1
def L3-3 := Π (p q: Ω) (x: ¬ p.1 → ¬ q.1), q.1 → p.1

-- [Frege]

def THEN-1 := K
def THEN-2 := Π (p q r: Ω) (x: p.1 → q.1 → r.1) (y: p.1 → q.1), p.1 → r.1
def THEN-3 := Π (p q r: Ω) (x: p.1 → q.1 → r.1), q.1 → p.1 → r.1
def FRG-1  := Π (p q: Ω) (x: p.1 → q.1), ¬ q.1 → ¬ p.1
def FRG-2  := Π (p: Ω), ¬ (¬ p.1) → p.1
def FRG-3  := Π (p: Ω), p.1 → ¬ (¬ p.1)

-- [Hilbert]

def H-1 := K
def H-2 := Π (p q r: Ω) (x: p.1 → q.1 → r.1), q.1 → p.1 → r.1
def H-3 := Π (p q r: Ω) (x: q.1 → r.1), ((p.1 → q.1) → (p.1 → r.1))
def H-4 := Π (p q: Ω) (x: p.1), ¬ q.1 → p.1
def H-5 := Π (p q: Ω) (x: p.1 → q.1), (¬ q.1 → p.1) → p.1
