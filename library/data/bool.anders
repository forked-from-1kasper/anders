{- Bool (0-sphere).

   HoTT 1.8 The type of booleans.

   Copyright © Groupoid Infinity, 2021—2022,
             © @siegment, 2022 -}

import library/proto
import library/data/either

def rec₂ (A : U) (a b : A) : 𝟐 → A := ind₂ (λ (_ : 𝟐), A) a b

section
  variables (C : 𝟐 → U) (f : Π (x : 𝟐), C 0₂) (g : Π (y : 𝟐), C 1₂)

  def 𝟐-β₁ : PathP (<_> C 0₂) (f 0₂) (ind₂ (λ (x : 𝟐), C x) (f 0₂) (g 1₂) 0₂) :=
  <_> f 0₂

  def 𝟐-β₂ : PathP (<_> C 1₂) (g 1₂) (ind₂ (λ (x : 𝟐), C x) (f 0₂) (g 1₂) 1₂) :=
  <_> g 1₂
end

def 𝟐-η (c : 𝟐) : + (PathP (<_> 𝟐) c 0₂) (PathP (<_> 𝟐) c 1₂) :=
ind₂ (λ (c : 𝟐), + (PathP (<_> 𝟐) c 0₂) (PathP (<_> 𝟐) c 1₂))
     (0₂, <_> 0₂) (1₂, <_> 1₂) c

def neg : 𝟐 → 𝟐 := rec₂ 𝟐 1₂ 0₂
def and : 𝟐 → 𝟐 → 𝟐 := rec₂ (𝟐 → 𝟐) (const 𝟐 𝟐 0₂) (id 𝟐)
def or  : 𝟐 → 𝟐 → 𝟐 := rec₂ (𝟐 → 𝟐) (id 𝟐) (const 𝟐 𝟐 1₂)
def xor : 𝟐 → 𝟐 → 𝟐 := rec₂ (𝟐 → 𝟐) (id 𝟐) neg

def neg-neg := ind₂ (λ (x : 𝟐), PathP (<_> 𝟐) (neg (neg x)) x) (<_> 0₂) (<_> 1₂)

def HA (a b : 𝟐) : 𝟐 × 𝟐 := (xor a b, and a b)
def or² (a : 𝟐) (w : 𝟐 × 𝟐) : 𝟐 × 𝟐 := (w.1, or a w.2)
def FA (a b cᵢₙ : 𝟐) : 𝟐 × 𝟐 := or² (HA a b).2 (HA (HA a b).1 cᵢₙ)
def add-2bit (a b : 𝟐 × 𝟐) : 𝟐 × 𝟐 := ((FA a.1 b.1 (HA a.2 b.2).2).1, (HA a.2 b.2).1)
