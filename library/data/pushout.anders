module pushout where
import library/data/either
import library/data/coequalizer

-- [Caglayan] 2014

def pushout (A B C : U) (f : C → A) (g : C → B) : U :=
coeq (∘ C A (+ A B) (inl A B) f) (∘ C B (+ A B) (inr A B) g)

def ρ₁ (A B C : U) (f : C → A) (g : C → B) (a : A) : pushout A B C f g :=
iota (∘ C A (+ A B) (inl A B) f) (∘ C B (+ A B) (inr A B) g) (inl A B a)

def ρ₂ (A B C : U) (f : C → A) (g : C → B) (b : B) : pushout A B C f g :=
iota (∘ C A (+ A B) (inl A B) f) (∘ C B (+ A B) (inr A B) g) (inr A B b)

def pushout-glue (A B C : U) (f : C → A) (g : C → B) (c : C) :
  Path (pushout A B C f g) (ρ₁ A B C f g (f c)) (ρ₂ A B C f g (g c)) :=
<i> resp (∘ C A (+ A B) (inl A B) f) (∘ C B (+ A B) (inr A B) g) c i