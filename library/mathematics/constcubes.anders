import library/data/path

-- https://github.com/mortberg/cubicaltt/blob/master/examples/constcubes.ctt
def Square (A : U) (a₀ a₁ b₀ b₁ : A)
    (u  : Path A a₀ a₁) (v  : Path A b₀ b₁)
    (r₀ : Path A a₀ b₀) (r₁ : Path A a₁ b₁) : U :=
PathP (<i> (Path A (r₀ @ i) (r₁ @ i))) u v

def sb (A : U) (a : A) (p : Path A a a) : Square A a a a a p (<_> a) p (<_> a) := <j i> p @ i ∨ j
def s₀ (A : U) (a : A) (p : Path A a a) : Square A a a a a p p (<_> a) (<_> a) := <_> p
def s₁ (A : U) (a : A) (p : Path A a a) : Square A a a a a (<_> a) p (<_> a) p := <j i> p @ i ∧ j

def Cube (A : U) (a₀ b₀ c₀ d₀ a₁ b₁ c₁ d₁ : A)
    (ab₀ : Path A a₀ b₀) (cd₀ : Path A c₀ d₀) (ac₀ : Path A a₀ c₀) (bd₀ : Path A b₀ d₀)
    (ab₁ : Path A a₁ b₁) (cd₁ : Path A c₁ d₁) (ac₁ : Path A a₁ c₁) (bd₁ : Path A b₁ d₁)
    (s₀ : Square A a₀ b₀ c₀ d₀ ab₀ cd₀ ac₀ bd₀) (s₁ : Square A a₁ b₁ c₁ d₁ ab₁ cd₁ ac₁ bd₁)
    (pa : Path A a₀ a₁) (pb : Path A b₀ b₁) (pc : Path A c₀ c₁) (pd : Path A d₀ d₁)
    (sab : Square A a₀ b₀ a₁ b₁ ab₀ ab₁ pa pb) (scd : Square A c₀ d₀ c₁ d₁ cd₀ cd₁ pc pd)
    (sac : Square A a₀ c₀ a₁ c₁ ac₀ ac₁ pa pc) (sbd : Square A b₀ d₀ b₁ d₁ bd₀ bd₁ pb pd) : U :=
PathP (<i> (Square A (pa @ i) (pb @ i) (pc @ i) (pd @ i)
                     (sab @ i) (scd @ i) (sac @ i) (sbd @ i))) s₀ s₁

def cs (A : U) (a : A) (p : Path A a a) : Square A a a a a p p p p :=
<j i> hcomp A (∂ i ∨ ∂ j)
      (λ (k : I), [(i = 0) → s₀ A a p @ k @ j,
                   (i = 1) → s₁ A a p @ k @ j,
                   (j = 0) → s₀ A a p @ k @ i,
                   (j = 1) → s₁ A a p @ k @ i])
      (sb A a p @ i @ j)

def c₀ (A : U) (a : A) (p : Path A a a) :
  Cube A a a a a a a a a p p p p p p p p (cs A a p) (cs A a p)
      (<_> a) (<_> a) (<_> a) (<_> a) (s₀ A a p) (s₀ A a p) (s₀ A a p) (s₀ A a p) :=
<_> cs A a p

def c₁ (A : U) (a : A) (p : Path A a a) :
  Cube A a a a a a a a a p (<_> a) p (<_> a) p p p p (sb A a p) (cs A a p)
      (<_> a) (<_> a) (<_> a) p (s₀ A a p) (s₁ A a p) (s₀ A a p) (s₁ A a p) :=
<k j i> cs A a p @ (i ∧ j ∧ k) @ (i ∨ j)

def Fd (A : U) (a b c : A) (p : Path A a b) (q : Path A b c) : Square A a b b c p q p q :=
<j i> hcomp A (∂ i ∨ ∂ j)
      (λ (k : I), [(i = 0) → p @ j,
                   (i = 1) → q @ k ∧ j,
                   (j = 0) → p @ i,
                   (j = 1) → q @ k ∧ i])
      (p @ i ∨ j)

def B (A : U) (a b c d : A) (p : Path A a b) (q : Path A b c) (r : Path A c d) :
  Cube A b b b b b c c d (<_> b) (<_> b) (<_> b) (<_> b) q r q r (<_> <_> b)
      (Fd A b c d q r) (<_> b) q q (<i> (Fd A b c d q r @ i @ i))
      (<i j> q @ i ∧ j) (<i j> ((Fd A b c d q r) @ i @ j ∧ i))
      (<i j> q @ i ∧ j) (<i j> ((Fd A b c d q r) @ i @ j ∧ i)) :=
<k j i> (Fd A b c d q r) @ (i ∧ j ∧ k) @ (k ∧ (i ∨ j))

def Tesseract (A : U) (a₀ b₀ c₀ d₀ a₁ b₁ c₁ d₁ a₂ b₂ c₂ d₂ a₃ b₃ c₃ d₃ : A)
    (ab₀ : Path A a₀ b₀) (cd₀ : Path A c₀ d₀) (ac₀ : Path A a₀ c₀) (bd₀ : Path A b₀ d₀)
    (ab₁ : Path A a₁ b₁) (cd₁ : Path A c₁ d₁) (ac₁ : Path A a₁ c₁) (bd₁ : Path A b₁ d₁)
    (s₀ : Square A a₀ b₀ c₀ d₀ ab₀ cd₀ ac₀ bd₀) (s₁ : Square A a₁ b₁ c₁ d₁ ab₁ cd₁ ac₁ bd₁)
    (a₀₁ : Path A a₀ a₁) (b₀₁ : Path A b₀ b₁) (c₀₁ : Path A c₀ c₁) (d₀₁ : Path A d₀ d₁)
    (sab₀₁ : Square A a₀ b₀ a₁ b₁ ab₀ ab₁ a₀₁ b₀₁) (scd₀₁ : Square A c₀ d₀ c₁ d₁ cd₀ cd₁ c₀₁ d₀₁)
    (sac₀₁ : Square A a₀ c₀ a₁ c₁ ac₀ ac₁ a₀₁ c₀₁) (sbd₀₁ : Square A b₀ d₀ b₁ d₁ bd₀ bd₁ b₀₁ d₀₁)
    (cu₀₁ : Cube A a₀ b₀ c₀ d₀ a₁ b₁ c₁ d₁ ab₀ cd₀ ac₀ bd₀ ab₁ cd₁ ac₁ bd₁ s₀ s₁ a₀₁ b₀₁ c₀₁ d₀₁ sab₀₁ scd₀₁ sac₀₁ sbd₀₁)
    (ab₂ : Path A a₂ b₂) (cd₂ : Path A c₂ d₂) (ac₂ : Path A a₂ c₂) (bd₂ : Path A b₂ d₂)
    (ab₃ : Path A a₃ b₃) (cd₃ : Path A c₃ d₃) (ac₃ : Path A a₃ c₃) (bd₃ : Path A b₃ d₃)
    (s₂ : Square A a₂ b₂ c₂ d₂ ab₂ cd₂ ac₂ bd₂) (s₃ : Square A a₃ b₃ c₃ d₃ ab₃ cd₃ ac₃ bd₃)
    (a₂₃ : Path A a₂ a₃) (b₂₃ : Path A b₂ b₃) (c₂₃ : Path A c₂ c₃) (d₂₃ : Path A d₂ d₃)
    (sab₂₃ : Square A a₂ b₂ a₃ b₃ ab₂ ab₃ a₂₃ b₂₃) (scd₂₃ : Square A c₂ d₂ c₃ d₃ cd₂ cd₃ c₂₃ d₂₃)
    (sac₂₃ : Square A a₂ c₂ a₃ c₃ ac₂ ac₃ a₂₃ c₂₃) (sbd₂₃ : Square A b₂ d₂ b₃ d₃ bd₂ bd₃ b₂₃ d₂₃)
    (cu₂₃ : Cube A a₂ b₂ c₂ d₂ a₃ b₃ c₃ d₃ ab₂ cd₂ ac₂ bd₂ ab₃ cd₃ ac₃ bd₃ s₂ s₃ a₂₃ b₂₃ c₂₃ d₂₃ sab₂₃ scd₂₃ sac₂₃ sbd₂₃)
    (a₀₂ : Path A a₀ a₂) (b₀₂ : Path A b₀ b₂) (c₀₂ : Path A c₀ c₂) (d₀₂ : Path A d₀ d₂)
    (a₁₃ : Path A a₁ a₃) (b₁₃ : Path A b₁ b₃) (c₁₃ : Path A c₁ c₃) (d₁₃ : Path A d₁ d₃)
    (sab₀₂ : Square A a₀ b₀ a₂ b₂ ab₀ ab₂ a₀₂ b₀₂) (scd₀₂ : Square A c₀ d₀ c₂ d₂ cd₀ cd₂ c₀₂ d₀₂)
    (sac₀₂ : Square A a₀ c₀ a₂ c₂ ac₀ ac₂ a₀₂ c₀₂) (sbd₀₂ : Square A b₀ d₀ b₂ d₂ bd₀ bd₂ b₀₂ d₀₂)
    (sab₁₃ : Square A a₁ b₁ a₃ b₃ ab₁ ab₃ a₁₃ b₁₃) (scd₁₃ : Square A c₁ d₁ c₃ d₃ cd₁ cd₃ c₁₃ d₁₃)
    (sac₁₃ : Square A a₁ c₁ a₃ c₃ ac₁ ac₃ a₁₃ c₁₃) (sbd₁₃ : Square A b₁ d₁ b₃ d₃ bd₁ bd₃ b₁₃ d₁₃)
    (sa : Square A a₀ a₁ a₂ a₃ a₀₁ a₂₃ a₀₂ a₁₃) (sb : Square A b₀ b₁ b₂ b₃ b₀₁ b₂₃ b₀₂ b₁₃)
    (sc : Square A c₀ c₁ c₂ c₃ c₀₁ c₂₃ c₀₂ c₁₃) (sd : Square A d₀ d₁ d₂ d₃ d₀₁ d₂₃ d₀₂ d₁₃)
    (cu₀₂ : Cube A a₀ b₀ c₀ d₀ a₂ b₂ c₂ d₂ ab₀ cd₀ ac₀ bd₀ ab₂ cd₂ ac₂ bd₂ s₀ s₂ a₀₂ b₀₂ c₀₂ d₀₂ sab₀₂ scd₀₂ sac₀₂ sbd₀₂)
    (cu₁₃ : Cube A a₁ b₁ c₁ d₁ a₃ b₃ c₃ d₃ ab₁ cd₁ ac₁ bd₁ ab₃ cd₃ ac₃ bd₃ s₁ s₃ a₁₃ b₁₃ c₁₃ d₁₃ sab₁₃ scd₁₃ sac₁₃ sbd₁₃)
    (cuab : Cube A a₀ b₀ a₁ b₁ a₂ b₂ a₃ b₃ ab₀ ab₁ a₀₁ b₀₁ ab₂ ab₃ a₂₃ b₂₃ sab₀₁ sab₂₃ a₀₂ b₀₂ a₁₃ b₁₃ sab₀₂ sab₁₃ sa sb)
    (cucd : Cube A c₀ d₀ c₁ d₁ c₂ d₂ c₃ d₃ cd₀ cd₁ c₀₁ d₀₁ cd₂ cd₃ c₂₃ d₂₃ scd₀₁ scd₂₃ c₀₂ d₀₂ c₁₃ d₁₃ scd₀₂ scd₁₃ sc sd)
    (cuac : Cube A a₀ c₀ a₁ c₁ a₂ c₂ a₃ c₃ ac₀ ac₁ a₀₁ c₀₁ ac₂ ac₃ a₂₃ c₂₃ sac₀₁ sac₂₃ a₀₂ c₀₂ a₁₃ c₁₃ sac₀₂ sac₁₃ sa sc)
    (cubd : Cube A b₀ d₀ b₁ d₁ b₂ d₂ b₃ d₃ bd₀ bd₁ b₀₁ d₀₁ bd₂ bd₃ b₂₃ d₂₃ sbd₀₁ sbd₂₃ b₀₂ d₀₂ b₁₃ d₁₃ sbd₀₂ sbd₁₃ sb sd) : U :=
PathP (<i> (Cube A (a₀₂ @ i) (b₀₂ @ i) (c₀₂ @ i) (d₀₂ @ i) (a₁₃ @ i) (b₁₃ @ i) (c₁₃ @ i) (d₁₃ @ i)
                   (sab₀₂ @ i) (scd₀₂ @ i) (sac₀₂ @ i) (sbd₀₂ @ i) (sab₁₃ @ i) (scd₁₃ @ i) (sac₁₃ @ i) (sbd₁₃ @ i)
                   (cu₀₂ @ i) (cu₁₃ @ i) (sa @ i) (sb @ i) (sc @ i) (sd @ i)
                   (cuab @ i) (cucd @ i) (cuac @ i) (cubd @ i))) cu₀₁ cu₂₃

def cb (A : U) (a : A) (p : Path A a a) :
  Cube A a a a a a a a a p p p p p (<_> a) p (<_> a) (cs A a p) (sb A a p) p p p
      (<_> a) (cs A a p) (sb A a p) (cs A a p) (sb A a p) :=
<k j i> cs A a p @ (i ∨ j ∨ k) @ ((i ∨ j) ∧ (i ∨ k) ∧ (j ∨ k))

def cc (A : U) (a : A) (p : Path A a a) :
  Cube A a a a a a a a a p p p p p p p p (cs A a p) (cs A a p) p p p p (cs A a p) (cs A a p) (cs A a p) (cs A a p) :=
<k j i> hcomp A (∂ i ∨ ∂ j ∨ ∂ k)
        (λ (l : I), [(i = 0) → c₀ A a p @ l @ j @ k,
                     (i = 1) → c₁ A a p @ l @ j @ k,
                     (j = 0) → c₀ A a p @ l @ i @ k,
                     (j = 1) → c₁ A a p @ l @ i @ k,
                     (k = 0) → c₀ A a p @ l @ i @ j,
                     (k = 1) → c₁ A a p @ l @ i @ j])
        (cb A a p @ i @ j @ k)

def tb (A : U) (a : A) (p : Path A a a) :
  Tesseract A a a a a a a a a a a a a a a a a p p p p p p p p
            (cs A a p) (cs A a p) p p p p (cs A a p) (cs A a p) (cs A a p) (cs A a p) (cc A a p) p p p p p (<_> a) p (<_> a)
            (cs A a p) (sb A a p) p p p (<_> a) (cs A a p) (sb A a p) (cs A a p) (sb A a p) (cb A a p) p p p p p p p (<_> a)
            (cs A a p) (cs A a p) (cs A a p) (cs A a p) (cs A a p) (sb A a p) (cs A a p) (sb A a p) (cs A a p)
            (cs A a p) (cs A a p) (sb A a p) (cc A a p) (cb A a p) (cc A a p) (cb A a p) (cc A a p) (cb A a p) :=
<l k j i> cc A a p @ (i ∨ j ∨ k ∨ l)
                   @ ((i ∨ j ∨ k) ∧ (i ∨ j ∨ l) ∧ (i ∨ k ∨ l) ∧ (j ∨ k ∨ l))
                   @ ((i ∨ j) ∧ (i ∨ k) ∧ (i ∨ l) ∧ (j ∨ k) ∧ (j ∨ l) ∧ (k ∨ l))