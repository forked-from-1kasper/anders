{- MLTT Reality Check: https://homotopy.dev/articles/mltt/mltt.pdf
   - Pi, Sigma, Path.

   Copyright (c) Groupoid Infinity, 2014-2022. -}

module mltt where
import library/foundations/mltt/pi
import library/foundations/mltt/sigma
import library/foundations/univalent/path

def MLTT (A : U) : U‚ÇÅ :=
Œ£ (Œ†-form  : Œ† (B : A ‚Üí U), U)
  (Œ†-ctor‚ÇÅ : Œ† (B : A ‚Üí U), Pi A B ‚Üí Pi A B)
  (Œ†-elim‚ÇÅ : Œ† (B : A ‚Üí U), Pi A B ‚Üí Pi A B)
  (Œ†-comp‚ÇÅ : Œ† (B : A ‚Üí U) (a : A) (f : Pi A B), Path (B a) (Œ†-elim‚ÇÅ B (Œ†-ctor‚ÇÅ B f) a) (f a))
  (Œ†-comp‚ÇÇ : Œ† (B : A ‚Üí U) (a : A) (f : Pi A B), Path (Pi A B) f (Œª (x : A), f x))
  (Œ£-form  : Œ† (B : A ‚Üí U), U)
  (Œ£-ctor‚ÇÅ : Œ† (B : A ‚Üí U) (a : A) (b : B a) , Sigma A B)
  (Œ£-elim‚ÇÅ : Œ† (B : A ‚Üí U) (p : Sigma A B), A)
  (Œ£-elim‚ÇÇ : Œ† (B : A ‚Üí U) (p : Sigma A B), B (pr‚ÇÅ A B p))
  (Œ£-comp‚ÇÅ : Œ† (B : A ‚Üí U) (a : A) (b: B a), Path A a (Œ£-elim‚ÇÅ B (Œ£-ctor‚ÇÅ B a b)))
  (Œ£-comp‚ÇÇ : Œ† (B : A ‚Üí U) (a : A) (b: B a), Path (B a) b (Œ£-elim‚ÇÇ B (a, b)))
  (Œ£-comp‚ÇÉ : Œ† (B : A ‚Üí U) (p : Sigma A B), Path (Sigma A B) p (pr‚ÇÅ A B p, pr‚ÇÇ A B p))
  (=-form  : Œ† (a : A), A ‚Üí U)
  (=-ctor‚ÇÅ : Œ† (a : A), Path A a a)
  (=-elim‚ÇÅ : Œ† (a : A) (C: D A) (d: C a a (=-ctor‚ÇÅ a)) (y: A) (p: Path A a y), C a y p)
  (=-comp‚ÇÅ : Œ† (a : A) (C: D A) (d: C a a (=-ctor‚ÇÅ a)), Path (C a a (=-ctor‚ÇÅ a)) d (=-elim‚ÇÅ a C d a (=-ctor‚ÇÅ a))), ùüè

-- Theorem. Œ≤-rule for pretypes is derivable with generalized transport

theorem internalizing (A : U) : MLTT A :=
(Pi A, lambda A, apply A, Œ†-Œ≤ A, Œ†-Œ∑ A,
 Sigma A, pair A, pr‚ÇÅ A, pr‚ÇÇ A, Œ£-Œ≤‚ÇÅ A, Œ£-Œ≤‚ÇÇ A, Œ£-Œ∑ A,
 Path A, idp A, J A, J-Œ≤ A, ‚òÖ)
