{- Homotopy Pullback.
   HoTT 2.15

   Copyright © Groupoid Infinity, 2021—2022,
             © @siegment, 2022 -}

module pullback where
import library/data/path
import library/data/equiv

{-
       z₂
    Z ――――→ B
    |       |
 z₁ |  pb   | g
    ↓       ↓
    A ――――→ C
        f
-}

def pullback (A B C : U) (f : A → C) (g : B → C) : U := Σ (a : A) (b : B), Path C (f a) (g b)
def kernel (A B : U) (f : A → B) : U := pullback A A B f f
def hofiber (A B : U) (f : A → B) (y : B): U := pullback A 𝟏 B f (λ (x : 𝟏), y)

section
  variables (A B C : U) (f : A → C) (g : B → C)

  def pb₁ : pullback A B C f g → A := λ (x : pullback A B C f g), x.1
  def pb₂ : pullback A B C f g → B := λ (x : pullback A B C f g), x.2.1
  def pb₃ : Π (x : pullback A B C f g), Path C (f x.1) (g x.2.1) := λ (x : pullback A B C f g), x.2.2
end

def induced (Z A B C : U) (f : A → C) (g : B → C) (z₁ : Z → A) (z₂ : Z → B)
  (h : Π (z : Z), Path C ((∘ Z A C f z₁) z) (((∘ Z B C g z₂)) z)) : Z → pullback A B C f g :=
λ (z : Z), (z₁ z, z₂ z, h z)

def pullbackSq (Z A B C : U) (f : A → C) (g : B → C) (z₁ : Z → A) (z₂ : Z → B): U :=
Σ (h : Π (z : Z), Path C ((∘ Z A C f z₁) z) (((∘ Z B C g z₂)) z)), isEquiv Z (pullback A B C f g) (induced Z A B C f g z₁ z₂ h)

def isPullbackSq (Z A B C : U) (f : A → C) (g : B → C)
  (z₁ : Z → A) (z₂ : Z → B) (h : Π (z : Z), Path C ((∘ Z A C f z₁) z) (((∘ Z B C g z₂)) z)) : U :=
isEquiv Z (pullback A B C f g) (induced Z A B C f g z₁ z₂ h)