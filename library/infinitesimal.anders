{- The modality of shape infinitesimal in cohesive infinity topos.
   - \Im modality type.

   HoTT 7.7 Modalities

   https://arxiv.org/pdf/1806.05966.pdf

   Copyright (c) Groupoid Infinity, 2014-2022. -}

module infinitesimal where
import library/path
import library/equiv

axiom ℑ : U -> U
axiom ι (A: U) : A -> ℑ A
def isCoreduced (A: U): U := isEquiv A (ℑ A) (ι A)
axiom ImCoreduced (A: U): isCoreduced (ℑ A)

axiom ImInduction (A: U) (B: ℑ A -> U) (x: Π (a: ℑ A), isCoreduced (B a)) (y: Π (a: A), B (ι A a)) : Π (a: ℑ A), B a
axiom ImComputeInduction (A: U) (B: ℑ A -> U) (c: Π (a: ℑ A), isCoreduced (B a)) (f: Π (a: A), B (ι A a)) (a: A)
  : Path (B (ι A a)) (f a) ((ImInduction A B c f) (ι A a))

def ImRecursion (A B: U) (c: isCoreduced B) (f: A -> B) : ℑ A -> B
 := ImInduction A (λ (_ : ℑ A), B) (λ (_ : ℑ A), c) f

def ImComputeRecursion (A B: U) (c: isCoreduced B) (f: A -> B) (a: A): PathP (<_> B) (f a) ((ImRecursion A B c f) (ι A a))
 := ImComputeInduction A (λ (_ : ℑ A), B) (λ (_ : ℑ A), c) f a

def ImApp (A B: U) (f: A -> B) : ℑ A -> ℑ B := ImRecursion A (ℑ B) (ImCoreduced B) (∘ A B (ℑ B) (ι B) f)
def ImNaturality (A B: U) (f: A -> B) : Π (a: A), Path (ℑ B) ((ι B) (f a)) ((ImApp A B f) (ι A a))
 := ImComputeRecursion A (ℑ B) (ImCoreduced B) (∘ A B (ℑ B) (ι B) f)

def isInfinitesimalClose (X: U) (a x': X): U := Path (ℑ X) (ι X a) (ι X x')
def formalDisc (X: U) (a: X): U := Σ (x': X), isInfinitesimalClose X a x'
def unitDisc (X: U) (x: ℑ X): U := Σ(x': X), Path (ℑ X) x (ι X x')
def starDisc (X: U) (x: X): formalDisc X x := (x, idp (ℑ X) (ι X x))
def formalDiscBundle (A: U): U := Σ (a: A), formalDisc A a

def differential (X Y: U) (f: X -> Y) (x : X) (ε : formalDisc X x) : formalDisc Y (f x)
 := (f ε.1, <i> hcomp (ℑ Y) (∂ i) (λ (j : I), [(i = 0) → ImNaturality X Y f x @ -j, (i = 1) → ImNaturality X Y f ε.1 @ -j]) (ImApp X Y f (ε.2 @ i)))

axiom preservesInifinitesimalProximity (X Y: U) (x x': X) (f: X -> Y) : isInfinitesimalClose X x x' -> isInfinitesimalClose Y (f x) (f x')

axiom lemma45 (A B C: U) (f: A -> B) (g: B -> C) (x: A)
  : Path ((formalDisc A x -> formalDisc C ((∘ A B C g f) x)))
         (differential A C (∘ A B C g f) x)
         (∘ (formalDisc A x) (formalDisc B (f x)) (formalDisc C ((∘ A B C g f) x)) (differential B C g (f x)) (differential A B f x))
